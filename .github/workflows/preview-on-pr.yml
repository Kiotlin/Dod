name: Preview App for Pull Request

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

env:
  NATIVE_CHANGED: false
  BRANCH_NAME: "pr-${{ github.event.pull_request.number }}"
  PR_TITLE: "${{ github.event.pull_request.title }}"

jobs:
  preview-build:
    name: Generate PR Preview
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # Allow comments on PRs
      actions: write # Allow updating fingerprint in acton caches

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23.x"
          cache: npm

      - name: Install dependencies
        run: npm install

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          packager: npm
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Check for Native Code Changes
        id: check_native
        run: |
          git fetch origin main:main || true
          if git diff --name-only origin/main...HEAD | grep -E "^(ios/|android/|package.json|package-lock.json|app.json|app.config.js|eas.json)"; then
            echo "NATIVE_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Create Preview Update (if no Native changes)
        if: env.NATIVE_CHANGED == 'false'
        run: |
          MESSAGE=$(echo "${{env.BRANCH_NAME}}: ${{ env.PR_TITLE }}" | sed 's/ /_/g')
          eas update --message $MESSAGE --channel preview --non-interactive

      - name: Build Full App (Native changes detected)
        if: env.NATIVE_CHANGED == 'true'
        uses: expo/expo-github-action/preview-build@main
        with:
          command: eas build --platform ios --profile preview --non-interactive

      - name: Obtain Expo Preview Comment
        uses: expo/expo-github-action/preview-comment@v8
        id: expo_comment
        with:
          channel: preview
          comment: false

      - name: Post Comment in PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TITLE=$(echo "${{ env.BRANCH_NAME }}: ${{ env.PR_TITLE }}" | sed 's/ /_/g')
          PROJECT_NAME=${{ steps.expo_comment.outputs.projectName }}
          PROJECT_LINK=${{ steps.expo_comment.outputs.projectLink }}
          QR_CODE="https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=$PROJECT_LINK"

          COMMENT_BODY=$(cat <<EOF
          This pull request was automatically deployed! 
          - Project: **$PROJECT_ID** 
          - Channel: **Preview**
          - Link: [Preview in Expo Go â†—]($PROJECT_LINK)<br>
          ![QR Code]($QR_CODE)
          EOF)

          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/comments \
            -d "{\"body\": \"$COMMENT_BODY\"}"
